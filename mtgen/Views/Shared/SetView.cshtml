@using System.Linq;
@model Set
<!doctype html>
<html dir="ltr" lang="en-US">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>@Model.Name - Magic: The Gathering: Card Generator</title>
    <meta name="Description" content="@Model.Name Sealed Deck Card Generator for Magic: The Gathering">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link href="http://fonts.googleapis.com/css?family=IM+Fell+DW+Pica:400,400italic" rel="stylesheet" type="text/css">
    <link href="http://fonts.googleapis.com/css?family=PT+Sans:400,700" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="~/css/html5reset.css" type="text/css" />
    <link rel="stylesheet" href="~/css/generator.css" type="text/css" />
    <link rel="stylesheet" href="~/lib/tingle/dist/tingle.css">
    <link rel="stylesheet" href="~/css/print.css?v1.1" type="text/css" media="print" />
    <link rel="stylesheet" href="~/@Model.Code/set.css" type="text/css" />
    @{await Html.RenderPartialAsync("_favicons"); }
    @{await Html.RenderPartialAsync("_ga"); }
</head>
<body class="home">
    <aside class="info">
        <p class="created-date">Created: @Model.GeneratorCreatedDate?.ToString("dd-MMM-yyy"). @Model.CreatedText</p>
        @{
            var first = true;
            foreach (var update in Model.Updates)
            {
                if (first)
                {
                    first = false;
                    <p class="update-new">Updated: @update.UpdateDate.ToString("dd-MMM-yyy"): @Html.Raw(update.HtmlString)</p>
                }
                else
                {
                    <p class="update hidden">@update.UpdateDate.ToString("dd-MMM-yyy"): @Html.Raw(update.HtmlString)</p>

                }
            }
            if (Model.Updates.Count() > 1)
            {
                <a class="update-more button" href="#">@(Model.Updates.Count() - 1) More ></a>
            }
        }
    </aside>
    @if (Model.Incomplete)
    {
        <div class="warning">WARNING: All cards have not yet been released. Placeholders have been created for cards we know exist but we don't yet have good images for them.</div>
    }
    <header>
        <div class="symbol">
            <img itemprop="image" src="~/@Model.Code/images/symbol.png" alt="symbol" />
            <a asp-controller="Home" asp-action="Index" class="button"><span>Back to </span>Home</a>
            <a href="http://eepurl.com/bbdyO5" class="button small" title="Subscribe to email updates">Subscribe</a>
            <a href="https://twitter.com/mtggen" class="button small" title="Follow @@mtggen on Twitter">@@mtggen</a>
        </div>
        <h1 itemprop="name"><span class="mtg">Magic: The Gathering</span> <span class="set-name">@Model.Name</span> <span class="sdg">Sealed Deck Card Generator</span></h1>
        <div id="card-count">
            <span class="current">...</span>/<span class="total"></span> cards
        </div>
    </header>
    <main>
        <em>Loading ...</em>
    </main>
    <footer>
        <p>Created by: Cam Marsollier - <a href="mailto:cam.marsollier@gmail.com">cam.marsollier@gmail.com</a></p>
        <p>Wizards of the Coast, Magic: The Gathering, and their logos are trademarks of Wizards of the Coast LLC in the United States and other countries. © 2009 Wizards. All Rights Reserved.</p>
        <p>MtG Generator is not affiliated with, endorsed, sponsored, or specifically approved by Wizards of the Coast LLC. MtG Generator may use the trademarks and other intellectual property of Wizards of the Coast LLC, which is permitted under Wizards' Fan Site Policy. For more information about Wizards of the Coast or any of Wizards' trademarks or other intellectual property, please visit their website at <a href="http://www.wizards.com">www.wizards.com</a>.</p>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/underscore/underscore-min.js"></script>
    <script src="~/lib/backbone/backbone.js"></script>
    <script src="~/lib/mdn.base64.min.js"></script>
    <script src="~/lib/tingle/dist/tingle.js?v0.10.0"></script>
    <script src="~/lib/mtg-generator-lib.js?v2.4"></script>
    <script src="~/lib/mtg-generator.js?v=2.3"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/holder/2.9.4/holder.min.js"></script>
    <script>
        $(document).ready(function () {
            mtgGen.run({
                setCode: "@Model.Code"
                , setFile: "@Model.SetFile"
                , cardFiles: [ @Html.Raw(string.Join(", ", Model.CardFiles.Select(cardFile => $"'/{Model.Code}/{cardFile}'"))) ]
                , packFiles: [ @Html.Raw(string.Join(", ", Model.PackFiles.Select(packFile => $"'/{Model.Code}/{packFile}'"))) ]
                , productFile: "/@Model.Code/@Model.ProductFile"
                , startProductName: "@Model.StartProductName"
                , setCardCount: "@Model.CardCount"
                , contentElem: "main"
            });

            // Modal popup support.
            window.modal = new tingle.modal({});

            // Dynamic card loading counts
            document.querySelector('#card-count .total').textContent = mtgGen.setCardCount;
            const currentCardCountEl = document.querySelector('#card-count .current');
            window.addEventListener('playableCardLoaded', e => currentCardCountEl.textContent = e.detail.setCardsLoadedCount, false);

            // Properly render any placeholder images and modal popups.
            const _showCardModal = event => {
                window.modal.setContent(`<div class='modal-card'><img src='${event.currentTarget.href}'/></div>`);
                window.modal.open();
                event.preventDefault();
            };
            window.addEventListener('resultsRendered', e => {
                Holder.run()
                document.querySelectorAll('#product-content .card a').forEach(el => el.addEventListener('click', _showCardModal) );
            }, false);

            // Analytics event tracking
            const currProduct = '#products a.active';
            const currOption = '#product-content>section.active .options a.active';
            window.addEventListener('cardSetsGenerated', e =>
                ga('send', 'event', e.detail.setCode.toUpperCase(), 'Generate', `${e.detail.setCode.toUpperCase()}: generate: ${currProduct.textContent}, ${currOption.textContent}`), false);
            window.addEventListener('drawSaved', e =>
                ga('send', 'event', e.detail.setCode.toUpperCase(), 'SaveDraw', `${e.detail.setCode.toUpperCase()}: save-draw: ${currProduct.textContent}`), false);
            window.addEventListener('drawLoaded', e =>
                ga('send', 'event', e.detail.setCode.toUpperCase(), 'LoadDraw', `${e.detail.setCode.toUpperCase()}: load-draw: ${currProduct.textContent}`, e.detail.drawId), false);
            window.addEventListener('exporting', e =>
                ga('send', 'event', e.detail.setCode.toUpperCase(), 'Export', `${e.detail.setCode.toUpperCase()}: export: ${currProduct.textContent}, ${currOption.textContent}`), false);

            // "Read more" support in top news section
            document.querySelector('aside.info').addEventListener('click', event => {
                if (event.target.classList.contains('update-more')) {
                    event.target.style.display = 'none';
                    document.querySelectorAll('aside.info p').forEach(n => n.classList.remove('hidden'));
                }
            });
        });
    </script>
</body>
</html>